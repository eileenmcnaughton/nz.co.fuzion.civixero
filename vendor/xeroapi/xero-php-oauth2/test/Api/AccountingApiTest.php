<?php
/**
 * AccountingApiTest
 * PHP version 5
 *
 * @category Class
 * @package  SidneyAllen\XeroPHP
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Accounting API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@xero.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace SidneyAllen\XeroPHP;

use \SidneyAllen\XeroPHP\Configuration;
use \SidneyAllen\XeroPHP\ApiException;
use \SidneyAllen\XeroPHP\ObjectSerializer;

/**
 * AccountingApiTest Class Doc Comment
 *
 * @category Class
 * @package  SidneyAllen\XeroPHP
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AccountingApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for createAccount
     *
     * Allows you to create a new chart of accounts.
     *
     */
    public function testCreateAccount()
    {
    }

    /**
     * Test case for createAccountAttachmentByFileName
     *
     * Allows you to create Attachment on Account.
     *
     */
    public function testCreateAccountAttachmentByFileName()
    {
    }

    /**
     * Test case for createBankTransaction
     *
     * Allows you to create a spend or receive money transaction.
     *
     */
    public function testCreateBankTransaction()
    {
    }

    /**
     * Test case for createBankTransactionAttachmentByFileName
     *
     * Allows you to createa an Attachment on BankTransaction by Filename.
     *
     */
    public function testCreateBankTransactionAttachmentByFileName()
    {
    }

    /**
     * Test case for createBankTransactionHistoryRecord
     *
     * Allows you to create history record for a bank transactions.
     *
     */
    public function testCreateBankTransactionHistoryRecord()
    {
    }

    /**
     * Test case for createBankTransfer
     *
     * Allows you to create a bank transfers.
     *
     */
    public function testCreateBankTransfer()
    {
    }

    /**
     * Test case for createBankTransferAttachmentByFileName
     *
     * .
     *
     */
    public function testCreateBankTransferAttachmentByFileName()
    {
    }

    /**
     * Test case for createBankTransferHistoryRecord
     *
     * .
     *
     */
    public function testCreateBankTransferHistoryRecord()
    {
    }

    /**
     * Test case for createBatchPayment
     *
     * Create one or many BatchPayments for invoices.
     *
     */
    public function testCreateBatchPayment()
    {
    }

    /**
     * Test case for createBatchPaymentHistoryRecord
     *
     * Allows you to create a history record for a Batch Payment.
     *
     */
    public function testCreateBatchPaymentHistoryRecord()
    {
    }

    /**
     * Test case for createBrandingThemePaymentServices
     *
     * Allow for the creation of new custom payment service for specified Branding Theme.
     *
     */
    public function testCreateBrandingThemePaymentServices()
    {
    }

    /**
     * Test case for createContact
     *
     * .
     *
     */
    public function testCreateContact()
    {
    }

    /**
     * Test case for createContactAttachmentByFileName
     *
     * .
     *
     */
    public function testCreateContactAttachmentByFileName()
    {
    }

    /**
     * Test case for createContactGroup
     *
     * Allows you to create a contact group.
     *
     */
    public function testCreateContactGroup()
    {
    }

    /**
     * Test case for createContactGroupContacts
     *
     * Allows you to add Contacts to a Contract Group.
     *
     */
    public function testCreateContactGroupContacts()
    {
    }

    /**
     * Test case for createContactHistory
     *
     * Allows you to retrieve a history records of an Contact.
     *
     */
    public function testCreateContactHistory()
    {
    }

    /**
     * Test case for createCreditNote
     *
     * Allows you to create a credit note.
     *
     */
    public function testCreateCreditNote()
    {
    }

    /**
     * Test case for createCreditNoteAllocation
     *
     * Allows you to create Allocation on CreditNote.
     *
     */
    public function testCreateCreditNoteAllocation()
    {
    }

    /**
     * Test case for createCreditNoteAttachmentByFileName
     *
     * Allows you to create Attachments on CreditNote by file name.
     *
     */
    public function testCreateCreditNoteAttachmentByFileName()
    {
    }

    /**
     * Test case for createCreditNoteHistory
     *
     * Allows you to retrieve a history records of an CreditNote.
     *
     */
    public function testCreateCreditNoteHistory()
    {
    }

    /**
     * Test case for createCurrency
     *
     * .
     *
     */
    public function testCreateCurrency()
    {
    }

    /**
     * Test case for createEmployee
     *
     * Allows you to create new employees used in Xero payrun.
     *
     */
    public function testCreateEmployee()
    {
    }

    /**
     * Test case for createExpenseClaim
     *
     * Allows you to retrieve expense claims.
     *
     */
    public function testCreateExpenseClaim()
    {
    }

    /**
     * Test case for createExpenseClaimHistory
     *
     * Allows you to create a history records of an ExpenseClaim.
     *
     */
    public function testCreateExpenseClaimHistory()
    {
    }

    /**
     * Test case for createInvoice
     *
     * Allows you to create any sales invoices or purchase bills.
     *
     */
    public function testCreateInvoice()
    {
    }

    /**
     * Test case for createInvoiceAttachmentByFileName
     *
     * Allows you to create an Attachment on invoices or purchase bills by it's filename.
     *
     */
    public function testCreateInvoiceAttachmentByFileName()
    {
    }

    /**
     * Test case for createInvoiceHistory
     *
     * Allows you to retrieve a history records of an invoice.
     *
     */
    public function testCreateInvoiceHistory()
    {
    }

    /**
     * Test case for createItem
     *
     * Allows you to create an item.
     *
     */
    public function testCreateItem()
    {
    }

    /**
     * Test case for createItemHistory
     *
     * Allows you to create a history record for items.
     *
     */
    public function testCreateItemHistory()
    {
    }

    /**
     * Test case for createLinkedTransaction
     *
     * Allows you to create linked transactions (billable expenses).
     *
     */
    public function testCreateLinkedTransaction()
    {
    }

    /**
     * Test case for createManualJournal
     *
     * Allows you to create a manual journal.
     *
     */
    public function testCreateManualJournal()
    {
    }

    /**
     * Test case for createManualJournalAttachmentByFileName
     *
     * Allows you to create a specified Attachment on ManualJournal by file name.
     *
     */
    public function testCreateManualJournalAttachmentByFileName()
    {
    }

    /**
     * Test case for createOverpaymentAllocation
     *
     * Allows you to retrieve Allocations for overpayments.
     *
     */
    public function testCreateOverpaymentAllocation()
    {
    }

    /**
     * Test case for createOverpaymentHistory
     *
     * Allows you to create history records of an Overpayment.
     *
     */
    public function testCreateOverpaymentHistory()
    {
    }

    /**
     * Test case for createPayment
     *
     * Allows you to create payments for invoices and credit notes.
     *
     */
    public function testCreatePayment()
    {
    }

    /**
     * Test case for createPaymentHistory
     *
     * Allows you to create a history record for a payment.
     *
     */
    public function testCreatePaymentHistory()
    {
    }

    /**
     * Test case for createPaymentService
     *
     * Allows you to create payment services.
     *
     */
    public function testCreatePaymentService()
    {
    }

    /**
     * Test case for createPrepaymentAllocation
     *
     * Allows you to create an Allocation for prepayments.
     *
     */
    public function testCreatePrepaymentAllocation()
    {
    }

    /**
     * Test case for createPrepaymentHistory
     *
     * Allows you to create a history record for an Prepayment.
     *
     */
    public function testCreatePrepaymentHistory()
    {
    }

    /**
     * Test case for createPurchaseOrder
     *
     * Allows you to create purchase orders.
     *
     */
    public function testCreatePurchaseOrder()
    {
    }

    /**
     * Test case for createPurchaseOrderHistory
     *
     * Allows you to create HistoryRecord for purchase orders.
     *
     */
    public function testCreatePurchaseOrderHistory()
    {
    }

    /**
     * Test case for createReceipt
     *
     * Allows you to create draft expense claim receipts for any user.
     *
     */
    public function testCreateReceipt()
    {
    }

    /**
     * Test case for createReceiptAttachmentByFileName
     *
     * Allows you to create Attachment on expense claim receipts by file name.
     *
     */
    public function testCreateReceiptAttachmentByFileName()
    {
    }

    /**
     * Test case for createReceiptHistory
     *
     * Allows you to retrieve a history records of an Receipt.
     *
     */
    public function testCreateReceiptHistory()
    {
    }

    /**
     * Test case for createRepeatingInvoiceAttachmentByFileName
     *
     * Allows you to create attachment on repeating invoices by file name.
     *
     */
    public function testCreateRepeatingInvoiceAttachmentByFileName()
    {
    }

    /**
     * Test case for createRepeatingInvoiceHistory
     *
     * Allows you to create history for a repeating invoice.
     *
     */
    public function testCreateRepeatingInvoiceHistory()
    {
    }

    /**
     * Test case for createTaxRate
     *
     * Allows you to create Tax Rates.
     *
     */
    public function testCreateTaxRate()
    {
    }

    /**
     * Test case for createTrackingCategory
     *
     * Allows you to create tracking categories.
     *
     */
    public function testCreateTrackingCategory()
    {
    }

    /**
     * Test case for createTrackingOptions
     *
     * Allows you to create options for a specified tracking category.
     *
     */
    public function testCreateTrackingOptions()
    {
    }

    /**
     * Test case for deleteAccount
     *
     * Allows you to delete a chart of accounts.
     *
     */
    public function testDeleteAccount()
    {
    }

    /**
     * Test case for deleteContactGroupContact
     *
     * Allows you to delete a specific Contact from a Contract Group.
     *
     */
    public function testDeleteContactGroupContact()
    {
    }

    /**
     * Test case for deleteContactGroupContacts
     *
     * Allows you to delete  all Contacts from a Contract Group.
     *
     */
    public function testDeleteContactGroupContacts()
    {
    }

    /**
     * Test case for deleteItem
     *
     * Allows you to delete a specified item.
     *
     */
    public function testDeleteItem()
    {
    }

    /**
     * Test case for deleteLinkedTransaction
     *
     * Allows you to delete a specified linked transactions (billable expenses).
     *
     */
    public function testDeleteLinkedTransaction()
    {
    }

    /**
     * Test case for deletePayment
     *
     * Allows you to update a specified payment for invoices and credit notes.
     *
     */
    public function testDeletePayment()
    {
    }

    /**
     * Test case for deleteTrackingCategory
     *
     * Allows you to delete tracking categories.
     *
     */
    public function testDeleteTrackingCategory()
    {
    }

    /**
     * Test case for deleteTrackingOptions
     *
     * Allows you to delete a specified option for a specified tracking category.
     *
     */
    public function testDeleteTrackingOptions()
    {
    }

    /**
     * Test case for emailInvoice
     *
     * Allows you to email a copy of invoice to related Contact.
     *
     */
    public function testEmailInvoice()
    {
    }

    /**
     * Test case for getAccount
     *
     * Allows you to retrieve a single chart of accounts.
     *
     */
    public function testGetAccount()
    {
    }

    /**
     * Test case for getAccountAttachmentByFileName
     *
     * Allows you to retrieve Attachment on Account by Filename.
     *
     */
    public function testGetAccountAttachmentByFileName()
    {
    }

    /**
     * Test case for getAccountAttachmentById
     *
     * Allows you to retrieve specific Attachment on Account.
     *
     */
    public function testGetAccountAttachmentById()
    {
    }

    /**
     * Test case for getAccountAttachments
     *
     * Allows you to retrieve Attachments for accounts.
     *
     */
    public function testGetAccountAttachments()
    {
    }

    /**
     * Test case for getAccounts
     *
     * Allows you to retrieve the full chart of accounts.
     *
     */
    public function testGetAccounts()
    {
    }

    /**
     * Test case for getBankTransaction
     *
     * Allows you to retrieve a single spend or receive money transaction.
     *
     */
    public function testGetBankTransaction()
    {
    }

    /**
     * Test case for getBankTransactionAttachmentByFileName
     *
     * Allows you to retrieve Attachments on BankTransaction by Filename.
     *
     */
    public function testGetBankTransactionAttachmentByFileName()
    {
    }

    /**
     * Test case for getBankTransactionAttachmentById
     *
     * Allows you to retrieve Attachments on a specific BankTransaction.
     *
     */
    public function testGetBankTransactionAttachmentById()
    {
    }

    /**
     * Test case for getBankTransactionAttachments
     *
     * Allows you to retrieve any attachments to bank transactions.
     *
     */
    public function testGetBankTransactionAttachments()
    {
    }

    /**
     * Test case for getBankTransactions
     *
     * Allows you to retrieve any spend or receive money transactions.
     *
     */
    public function testGetBankTransactions()
    {
    }

    /**
     * Test case for getBankTransactionsHistory
     *
     * Allows you to retrieve history from a bank transactions.
     *
     */
    public function testGetBankTransactionsHistory()
    {
    }

    /**
     * Test case for getBankTransfer
     *
     * Allows you to retrieve any bank transfers.
     *
     */
    public function testGetBankTransfer()
    {
    }

    /**
     * Test case for getBankTransferAttachmentByFileName
     *
     * Allows you to retrieve Attachments on BankTransfer by file name.
     *
     */
    public function testGetBankTransferAttachmentByFileName()
    {
    }

    /**
     * Test case for getBankTransferAttachmentById
     *
     * Allows you to retrieve Attachments on BankTransfer.
     *
     */
    public function testGetBankTransferAttachmentById()
    {
    }

    /**
     * Test case for getBankTransferAttachments
     *
     * Allows you to retrieve Attachments from  bank transfers.
     *
     */
    public function testGetBankTransferAttachments()
    {
    }

    /**
     * Test case for getBankTransferHistory
     *
     * Allows you to retrieve history from a bank transfers.
     *
     */
    public function testGetBankTransferHistory()
    {
    }

    /**
     * Test case for getBankTransfers
     *
     * Allows you to retrieve all bank transfers.
     *
     */
    public function testGetBankTransfers()
    {
    }

    /**
     * Test case for getBatchPaymentHistory
     *
     * Allows you to retrieve history from a Batch Payment.
     *
     */
    public function testGetBatchPaymentHistory()
    {
    }

    /**
     * Test case for getBatchPayments
     *
     * Retrieve either one or many BatchPayments for invoices.
     *
     */
    public function testGetBatchPayments()
    {
    }

    /**
     * Test case for getBrandingTheme
     *
     * Allows you to retrieve a specific BrandingThemes.
     *
     */
    public function testGetBrandingTheme()
    {
    }

    /**
     * Test case for getBrandingThemePaymentServices
     *
     * Allows you to retrieve the Payment services for a Branding Theme.
     *
     */
    public function testGetBrandingThemePaymentServices()
    {
    }

    /**
     * Test case for getBrandingThemes
     *
     * Allows you to retrieve all the BrandingThemes.
     *
     */
    public function testGetBrandingThemes()
    {
    }

    /**
     * Test case for getContact
     *
     * Allows you to retrieve, add and update contacts in a Xero organisation.
     *
     */
    public function testGetContact()
    {
    }

    /**
     * Test case for getContactAttachmentByFileName
     *
     * Allows you to retrieve Attachments on Contacts by file name.
     *
     */
    public function testGetContactAttachmentByFileName()
    {
    }

    /**
     * Test case for getContactAttachmentById
     *
     * Allows you to retrieve Attachments on Contacts.
     *
     */
    public function testGetContactAttachmentById()
    {
    }

    /**
     * Test case for getContactAttachments
     *
     * Allows you to retrieve, add and update contacts in a Xero organisation.
     *
     */
    public function testGetContactAttachments()
    {
    }

    /**
     * Test case for getContactCISSettings
     *
     * Allows you to retrieve CISSettings for a contact in a Xero organisation.
     *
     */
    public function testGetContactCISSettings()
    {
    }

    /**
     * Test case for getContactGroup
     *
     * Allows you to retrieve a unique Contract Group by ID.
     *
     */
    public function testGetContactGroup()
    {
    }

    /**
     * Test case for getContactGroups
     *
     * Allows you to retrieve the ContactID and Name of all the contacts in a contact group.
     *
     */
    public function testGetContactGroups()
    {
    }

    /**
     * Test case for getContactHistory
     *
     * Allows you to retrieve a history records of an Contact.
     *
     */
    public function testGetContactHistory()
    {
    }

    /**
     * Test case for getContacts
     *
     * Allows you to retrieve, add and update contacts in a Xero organisation.
     *
     */
    public function testGetContacts()
    {
    }

    /**
     * Test case for getCreditNote
     *
     * Allows you to retrieve a specific credit note.
     *
     */
    public function testGetCreditNote()
    {
    }

    /**
     * Test case for getCreditNoteAsPdf
     *
     * Allows you to retrieve Credit Note as PDF files.
     *
     */
    public function testGetCreditNoteAsPdf()
    {
    }

    /**
     * Test case for getCreditNoteAttachmentByFileName
     *
     * Allows you to retrieve Attachments on CreditNote by file name.
     *
     */
    public function testGetCreditNoteAttachmentByFileName()
    {
    }

    /**
     * Test case for getCreditNoteAttachmentById
     *
     * Allows you to retrieve Attachments on CreditNote.
     *
     */
    public function testGetCreditNoteAttachmentById()
    {
    }

    /**
     * Test case for getCreditNoteAttachments
     *
     * Allows you to retrieve Attachments for credit notes.
     *
     */
    public function testGetCreditNoteAttachments()
    {
    }

    /**
     * Test case for getCreditNoteHistory
     *
     * Allows you to retrieve a history records of an CreditNote.
     *
     */
    public function testGetCreditNoteHistory()
    {
    }

    /**
     * Test case for getCreditNotes
     *
     * Allows you to retrieve any credit notes.
     *
     */
    public function testGetCreditNotes()
    {
    }

    /**
     * Test case for getCurrencies
     *
     * Allows you to retrieve currencies for your organisation.
     *
     */
    public function testGetCurrencies()
    {
    }

    /**
     * Test case for getEmployee
     *
     * Allows you to retrieve a specific employee used in Xero payrun.
     *
     */
    public function testGetEmployee()
    {
    }

    /**
     * Test case for getEmployees
     *
     * Allows you to retrieve employees used in Xero payrun.
     *
     */
    public function testGetEmployees()
    {
    }

    /**
     * Test case for getExpenseClaim
     *
     * Allows you to retrieve a specified expense claim.
     *
     */
    public function testGetExpenseClaim()
    {
    }

    /**
     * Test case for getExpenseClaimHistory
     *
     * Allows you to retrieve a history records of an ExpenseClaim.
     *
     */
    public function testGetExpenseClaimHistory()
    {
    }

    /**
     * Test case for getExpenseClaims
     *
     * Allows you to retrieve expense claims.
     *
     */
    public function testGetExpenseClaims()
    {
    }

    /**
     * Test case for getInvoice
     *
     * Allows you to retrieve a specified sales invoice or purchase bill.
     *
     */
    public function testGetInvoice()
    {
    }

    /**
     * Test case for getInvoiceAsPdf
     *
     * Allows you to retrieve invoices or purchase bills as PDF files.
     *
     */
    public function testGetInvoiceAsPdf()
    {
    }

    /**
     * Test case for getInvoiceAttachmentByFileName
     *
     * Allows you to retrieve Attachment on invoices or purchase bills by it's filename.
     *
     */
    public function testGetInvoiceAttachmentByFileName()
    {
    }

    /**
     * Test case for getInvoiceAttachmentById
     *
     * Allows you to retrieve a specified Attachment on invoices or purchase bills by it's ID.
     *
     */
    public function testGetInvoiceAttachmentById()
    {
    }

    /**
     * Test case for getInvoiceAttachments
     *
     * Allows you to retrieve Attachments on invoices or purchase bills.
     *
     */
    public function testGetInvoiceAttachments()
    {
    }

    /**
     * Test case for getInvoiceHistory
     *
     * Allows you to retrieve a history records of an invoice.
     *
     */
    public function testGetInvoiceHistory()
    {
    }

    /**
     * Test case for getInvoiceReminders
     *
     * Allows you to retrieve invoice reminder settings.
     *
     */
    public function testGetInvoiceReminders()
    {
    }

    /**
     * Test case for getInvoices
     *
     * Allows you to retrieve any sales invoices or purchase bills.
     *
     */
    public function testGetInvoices()
    {
    }

    /**
     * Test case for getItem
     *
     * Allows you to retrieve a specified item.
     *
     */
    public function testGetItem()
    {
    }

    /**
     * Test case for getItemHistory
     *
     * Allows you to retrieve history for items.
     *
     */
    public function testGetItemHistory()
    {
    }

    /**
     * Test case for getItems
     *
     * Allows you to retrieve any items.
     *
     */
    public function testGetItems()
    {
    }

    /**
     * Test case for getJournal
     *
     * Allows you to retrieve a specified journals..
     *
     */
    public function testGetJournal()
    {
    }

    /**
     * Test case for getJournals
     *
     * Allows you to retrieve any journals..
     *
     */
    public function testGetJournals()
    {
    }

    /**
     * Test case for getLinkedTransaction
     *
     * Allows you to retrieve a specified linked transactions (billable expenses).
     *
     */
    public function testGetLinkedTransaction()
    {
    }

    /**
     * Test case for getLinkedTransactions
     *
     * Retrieve linked transactions (billable expenses).
     *
     */
    public function testGetLinkedTransactions()
    {
    }

    /**
     * Test case for getManualJournal
     *
     * Allows you to retrieve a specified manual journals.
     *
     */
    public function testGetManualJournal()
    {
    }

    /**
     * Test case for getManualJournalAttachmentByFileName
     *
     * Allows you to retrieve specified Attachment on ManualJournal by file name.
     *
     */
    public function testGetManualJournalAttachmentByFileName()
    {
    }

    /**
     * Test case for getManualJournalAttachmentById
     *
     * Allows you to retrieve specified Attachment on ManualJournals.
     *
     */
    public function testGetManualJournalAttachmentById()
    {
    }

    /**
     * Test case for getManualJournalAttachments
     *
     * Allows you to retrieve Attachment for manual journals.
     *
     */
    public function testGetManualJournalAttachments()
    {
    }

    /**
     * Test case for getManualJournals
     *
     * Allows you to retrieve any manual journals.
     *
     */
    public function testGetManualJournals()
    {
    }

    /**
     * Test case for getOnlineInvoice
     *
     * Allows you to retrieve a URL to an online invoice.
     *
     */
    public function testGetOnlineInvoice()
    {
    }

    /**
     * Test case for getOrganisationCISSettings
     *
     * Allows you To verify if an organisation is using contruction industry scheme, you can retrieve the CIS settings for the organistaion..
     *
     */
    public function testGetOrganisationCISSettings()
    {
    }

    /**
     * Test case for getOrganisations
     *
     * Allows you to retrieve Organisation details.
     *
     */
    public function testGetOrganisations()
    {
    }

    /**
     * Test case for getOverpayment
     *
     * Allows you to retrieve a specified overpayments.
     *
     */
    public function testGetOverpayment()
    {
    }

    /**
     * Test case for getOverpaymentHistory
     *
     * Allows you to retrieve a history records of an Overpayment.
     *
     */
    public function testGetOverpaymentHistory()
    {
    }

    /**
     * Test case for getOverpayments
     *
     * Allows you to retrieve overpayments.
     *
     */
    public function testGetOverpayments()
    {
    }

    /**
     * Test case for getPayment
     *
     * Allows you to retrieve a specified payment for invoices and credit notes.
     *
     */
    public function testGetPayment()
    {
    }

    /**
     * Test case for getPaymentHistory
     *
     * Allows you to retrieve history records of a payment.
     *
     */
    public function testGetPaymentHistory()
    {
    }

    /**
     * Test case for getPaymentServices
     *
     * Allows you to retrieve payment services.
     *
     */
    public function testGetPaymentServices()
    {
    }

    /**
     * Test case for getPayments
     *
     * Allows you to retrieve payments for invoices and credit notes.
     *
     */
    public function testGetPayments()
    {
    }

    /**
     * Test case for getPrepayment
     *
     * Allows you to retrieve a specified prepayments.
     *
     */
    public function testGetPrepayment()
    {
    }

    /**
     * Test case for getPrepaymentHistory
     *
     * Allows you to retrieve a history records of an Prepayment.
     *
     */
    public function testGetPrepaymentHistory()
    {
    }

    /**
     * Test case for getPrepayments
     *
     * Allows you to retrieve prepayments.
     *
     */
    public function testGetPrepayments()
    {
    }

    /**
     * Test case for getPurchaseOrder
     *
     * Allows you to retrieve a specified purchase orders.
     *
     */
    public function testGetPurchaseOrder()
    {
    }

    /**
     * Test case for getPurchaseOrderHistory
     *
     * Allows you to retrieve history for PurchaseOrder.
     *
     */
    public function testGetPurchaseOrderHistory()
    {
    }

    /**
     * Test case for getPurchaseOrders
     *
     * Allows you to retrieve purchase orders.
     *
     */
    public function testGetPurchaseOrders()
    {
    }

    /**
     * Test case for getReceipt
     *
     * Allows you to retrieve a specified draft expense claim receipts.
     *
     */
    public function testGetReceipt()
    {
    }

    /**
     * Test case for getReceiptAttachmentByFileName
     *
     * Allows you to retrieve Attachments on expense claim receipts by file name.
     *
     */
    public function testGetReceiptAttachmentByFileName()
    {
    }

    /**
     * Test case for getReceiptAttachmentById
     *
     * Allows you to retrieve Attachments on expense claim receipts by ID.
     *
     */
    public function testGetReceiptAttachmentById()
    {
    }

    /**
     * Test case for getReceiptAttachments
     *
     * Allows you to retrieve Attachments for expense claim receipts.
     *
     */
    public function testGetReceiptAttachments()
    {
    }

    /**
     * Test case for getReceiptHistory
     *
     * Allows you to retrieve a history records of an Receipt.
     *
     */
    public function testGetReceiptHistory()
    {
    }

    /**
     * Test case for getReceipts
     *
     * Allows you to retrieve draft expense claim receipts for any user.
     *
     */
    public function testGetReceipts()
    {
    }

    /**
     * Test case for getRepeatingInvoice
     *
     * Allows you to retrieve a specified repeating invoice.
     *
     */
    public function testGetRepeatingInvoice()
    {
    }

    /**
     * Test case for getRepeatingInvoiceAttachmentByFileName
     *
     * Allows you to retrieve specified attachment on repeating invoices by file name.
     *
     */
    public function testGetRepeatingInvoiceAttachmentByFileName()
    {
    }

    /**
     * Test case for getRepeatingInvoiceAttachmentById
     *
     * Allows you to retrieve a specified Attachments on repeating invoices.
     *
     */
    public function testGetRepeatingInvoiceAttachmentById()
    {
    }

    /**
     * Test case for getRepeatingInvoiceAttachments
     *
     * Allows you to retrieve Attachments on repeating invoice.
     *
     */
    public function testGetRepeatingInvoiceAttachments()
    {
    }

    /**
     * Test case for getRepeatingInvoiceHistory
     *
     * Allows you to retrieve history for a repeating invoice.
     *
     */
    public function testGetRepeatingInvoiceHistory()
    {
    }

    /**
     * Test case for getRepeatingInvoices
     *
     * Allows you to retrieve any repeating invoices.
     *
     */
    public function testGetRepeatingInvoices()
    {
    }

    /**
     * Test case for getReportAgedPayablesByContact
     *
     * Allows you to retrieve report for AgedPayablesByContact.
     *
     */
    public function testGetReportAgedPayablesByContact()
    {
    }

    /**
     * Test case for getReportAgedReceivablesByContact
     *
     * Allows you to retrieve report for AgedReceivablesByContact.
     *
     */
    public function testGetReportAgedReceivablesByContact()
    {
    }

    /**
     * Test case for getReportBASorGST
     *
     * Allows you to retrieve report for BAS only valid for AU orgs.
     *
     */
    public function testGetReportBASorGST()
    {
    }

    /**
     * Test case for getReportBASorGSTList
     *
     * Allows you to retrieve report for BAS only valid for AU orgs.
     *
     */
    public function testGetReportBASorGSTList()
    {
    }

    /**
     * Test case for getReportBalanceSheet
     *
     * Allows you to retrieve report for BalanceSheet.
     *
     */
    public function testGetReportBalanceSheet()
    {
    }

    /**
     * Test case for getReportBankSummary
     *
     * Allows you to retrieve report for BankSummary.
     *
     */
    public function testGetReportBankSummary()
    {
    }

    /**
     * Test case for getReportBudgetSummary
     *
     * Allows you to retrieve report for Budget Summary.
     *
     */
    public function testGetReportBudgetSummary()
    {
    }

    /**
     * Test case for getReportExecutiveSummary
     *
     * Allows you to retrieve report for ExecutiveSummary.
     *
     */
    public function testGetReportExecutiveSummary()
    {
    }

    /**
     * Test case for getReportProfitAndLoss
     *
     * Allows you to retrieve report for ProfitAndLoss.
     *
     */
    public function testGetReportProfitAndLoss()
    {
    }

    /**
     * Test case for getReportTenNinetyNine
     *
     * Allows you to retrieve report for TenNinetyNine.
     *
     */
    public function testGetReportTenNinetyNine()
    {
    }

    /**
     * Test case for getReportTrialBalance
     *
     * Allows you to retrieve report for TrialBalance.
     *
     */
    public function testGetReportTrialBalance()
    {
    }

    /**
     * Test case for getTaxRates
     *
     * Allows you to retrieve Tax Rates.
     *
     */
    public function testGetTaxRates()
    {
    }

    /**
     * Test case for getTrackingCategories
     *
     * Allows you to retrieve tracking categories and options.
     *
     */
    public function testGetTrackingCategories()
    {
    }

    /**
     * Test case for getTrackingCategory
     *
     * Allows you to retrieve tracking categories and options for specified category.
     *
     */
    public function testGetTrackingCategory()
    {
    }

    /**
     * Test case for getUser
     *
     * Allows you to retrieve a specified user.
     *
     */
    public function testGetUser()
    {
    }

    /**
     * Test case for getUsers
     *
     * Allows you to retrieve users.
     *
     */
    public function testGetUsers()
    {
    }

    /**
     * Test case for updateAccount
     *
     * Allows you to update a chart of accounts.
     *
     */
    public function testUpdateAccount()
    {
    }

    /**
     * Test case for updateAccountAttachmentByFileName
     *
     * Allows you to update Attachment on Account by Filename.
     *
     */
    public function testUpdateAccountAttachmentByFileName()
    {
    }

    /**
     * Test case for updateBankTransaction
     *
     * Allows you to update a single spend or receive money transaction.
     *
     */
    public function testUpdateBankTransaction()
    {
    }

    /**
     * Test case for updateBankTransactionAttachmentByFileName
     *
     * Allows you to update an Attachment on BankTransaction by Filename.
     *
     */
    public function testUpdateBankTransactionAttachmentByFileName()
    {
    }

    /**
     * Test case for updateBankTransferAttachmentByFileName
     *
     * .
     *
     */
    public function testUpdateBankTransferAttachmentByFileName()
    {
    }

    /**
     * Test case for updateContact
     *
     * .
     *
     */
    public function testUpdateContact()
    {
    }

    /**
     * Test case for updateContactAttachmentByFileName
     *
     * .
     *
     */
    public function testUpdateContactAttachmentByFileName()
    {
    }

    /**
     * Test case for updateContactGroup
     *
     * Allows you to update a Contract Group.
     *
     */
    public function testUpdateContactGroup()
    {
    }

    /**
     * Test case for updateCreditNote
     *
     * Allows you to update a specific credit note.
     *
     */
    public function testUpdateCreditNote()
    {
    }

    /**
     * Test case for updateCreditNoteAttachmentByFileName
     *
     * Allows you to update Attachments on CreditNote by file name.
     *
     */
    public function testUpdateCreditNoteAttachmentByFileName()
    {
    }

    /**
     * Test case for updateEmployee
     *
     * Allows you to update a specific employee used in Xero payrun.
     *
     */
    public function testUpdateEmployee()
    {
    }

    /**
     * Test case for updateExpenseClaim
     *
     * Allows you to update specified expense claims.
     *
     */
    public function testUpdateExpenseClaim()
    {
    }

    /**
     * Test case for updateInvoice
     *
     * Allows you to update a specified sales invoices or purchase bills.
     *
     */
    public function testUpdateInvoice()
    {
    }

    /**
     * Test case for updateInvoiceAttachmentByFileName
     *
     * Allows you to update Attachment on invoices or purchase bills by it's filename.
     *
     */
    public function testUpdateInvoiceAttachmentByFileName()
    {
    }

    /**
     * Test case for updateItem
     *
     * Allows you to udpate a specified item.
     *
     */
    public function testUpdateItem()
    {
    }

    /**
     * Test case for updateLinkedTransaction
     *
     * Allows you to update a specified linked transactions (billable expenses).
     *
     */
    public function testUpdateLinkedTransaction()
    {
    }

    /**
     * Test case for updateManualJournal
     *
     * Allows you to update a specified manual journal.
     *
     */
    public function testUpdateManualJournal()
    {
    }

    /**
     * Test case for updateManualJournalAttachmentByFileName
     *
     * Allows you to update a specified Attachment on ManualJournal by file name.
     *
     */
    public function testUpdateManualJournalAttachmentByFileName()
    {
    }

    /**
     * Test case for updatePurchaseOrder
     *
     * Allows you to update a specified purchase order.
     *
     */
    public function testUpdatePurchaseOrder()
    {
    }

    /**
     * Test case for updateReceipt
     *
     * Allows you to retrieve a specified draft expense claim receipts.
     *
     */
    public function testUpdateReceipt()
    {
    }

    /**
     * Test case for updateReceiptAttachmentByFileName
     *
     * Allows you to update Attachment on expense claim receipts by file name.
     *
     */
    public function testUpdateReceiptAttachmentByFileName()
    {
    }

    /**
     * Test case for updateRepeatingInvoiceAttachmentByFileName
     *
     * Allows you to update specified attachment on repeating invoices by file name.
     *
     */
    public function testUpdateRepeatingInvoiceAttachmentByFileName()
    {
    }

    /**
     * Test case for updateTaxRate
     *
     * Allows you to update Tax Rates.
     *
     */
    public function testUpdateTaxRate()
    {
    }

    /**
     * Test case for updateTrackingCategory
     *
     * Allows you to update tracking categories.
     *
     */
    public function testUpdateTrackingCategory()
    {
    }
}
